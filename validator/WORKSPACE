workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "7c161da37eadea264cdc39a30be50a906b8dea34bf3690b3f028845555c637de",
    strip_prefix = "abseil-cpp-b8c843eb1054e9f77c62e0b2547c9a4fdbed3c77",
    urls = ["https://github.com/abseil/abseil-cpp/archive/b8c843eb1054e9f77c62e0b2547c9a4fdbed3c77.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "f8dc5eab7ab3cb7b51e951900bb149a612d4192461c1d727a3ccf28636ea3354",
    strip_prefix = "googletest-2d16ed055d09c3689d44b272adc097393de948a0",
    urls = ["https://github.com/google/googletest/archive/2d16ed055d09c3689d44b272adc097393de948a0.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "6c7f263011f8d515d0e871a11a89ca322b7237ac87117348e1d659cbafc7f653",
    strip_prefix = "protobuf-51cba7ce170cf5ed88cc408ff7aa4b35aa0dd3b5",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/51cba7ce170cf5ed88cc408ff7aa4b35aa0dd3b5.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "32846fc3d44d946352d69ff3ffa4602c19be312bdfb66c31b31a0302886fa554",
    strip_prefix = "re2-2b354c6ad0d0479dcff68dab23fb0d1143a482c2",
    urls = ["https://github.com/google/re2/archive/2b354c6ad0d0479dcff68dab23fb0d1143a482c2.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "25a3fb2282ef69f81b852cacc8cf574862bf10d91fa886816b594c90ad415e42",
    strip_prefix = "rules_cc-f88663dc502aacb6a6f377030d0652309412c8a9",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/f88663dc502aacb6a6f377030d0652309412c8a9.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "8c850822dbd47121ca697279aa1129fcc7f2c4a8633921f06f81bc2df4f792c4",
    strip_prefix = "rules_proto-d205d37866925569d99b4d6cdcba172326ecf812",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/d205d37866925569d99b4d6cdcba172326ecf812.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/d205d37866925569d99b4d6cdcba172326ecf812.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "3efd785cf85a06a15b56113e03ea6f088a8d6f7a56e0d7f25bafdf4bc6c08bc1",
    strip_prefix = "emsdk-d52c46520124845b1e0e0525f2759299d840143f/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/d52c46520124845b1e0e0525f2759299d840143f.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "70ef2b4da987bf0d266e663d7c251eac509ff70dd65bba02d41d1e86e840a569",
    strip_prefix = "rules_closure-0.13.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.13.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.13.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
